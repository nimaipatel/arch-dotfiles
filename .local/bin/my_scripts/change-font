#!/bin/sh

# store font name here
CACHE_FILE="${XDG_CACHE_HOME:-$HOME/.cache}/x-font"
# list of fonts
ALLFONTS=$(fc-list : family)
# default font used for fallback
DEFAULT_FONT=$(fc-match monospace : family)

if [ "$1" = "--restore" ] && [ -z "$2" ] ; then
	# take font from cache file if `--restore` passed or fallback to default
	if [ -f "$CACHE_FILE" ] ; then
		CHOOSEN_FONT=$(cat "$CACHE_FILE")
	else
		CHOOSEN_FONT=$DEFAULT_FONT
	fi
elif [ -n "$1" ] && [ -z "$2" ] ; then
	# use first arg as font name
	CHOOSEN_FONT="$1"
elif [ -z "$1" ] ; then
	# choose font using fzfmenu if no args passed
	CHOOSEN_FONT=$(echo "$ALLFONTS" | fzfmenu --prompt="Choose Font ")
	# exit if nothing choosen
	[ -z "$CHOOSEN_FONT" ] && exit
else
	1>&2 echo "Invalid useage" && exit 1
fi

# use default font if unknown font name is passed
echo "$ALLFONTS" | grep "^${CHOOSEN_FONT}$" -q || CHOOSEN_FONT=$DEFAULT_FONT

# store choosen font in cache file
echo "$CHOOSEN_FONT" > "$CACHE_FILE"

# merge so that fonts are overwritten but color data is preserved
echo "*font: ${CHOOSEN_FONT}:pixelsize=14:antialias=true:autohint=true" | xrdb -merge

# send USR1 signal to all running st instances
pidof st | xargs kill -s USR1

# restart dwm using this hack
xdotool key "Super+F12"

# restart dunst, this script internally handles colors from xresources
restart-dunst

# refresh emacs
pidof emacs | xargs kill -s USR1

# send notification only if command started with fzfmenu and NOT command-line args
[ -z "$*" ] && notify-send "Font set to ${CHOOSEN_FONT}"
