#!/bin/sh

# store theme name here
CACHE_FILE="${XDG_CACHE_HOME:-$HOME/.cache}/x-theme"
# list of themes
THEMES="$(flavours list | tr ' ' '\n')"

if [ "$1" = "--restore" ] && [ -z "$2" ] ; then
	# take theme from cache file if `--restore` passed
	CHOOSEN_THEME=$(cat "$CACHE_FILE" 2>/dev/null)
elif [ -z "$1" ] ; then
	# choose theme using dmenu if no args passed
	CHOOSEN_THEME=$(echo "$THEMES" | dmenu -i -l 30 -p "Choose theme")
	# exit if nothing choosen
	[ -z "$CHOOSEN_THEME" ] && exit
elif [ -n "$1" ] && [ -z "$2" ] ; then
	# use first arg as theme if passed
	CHOOSEN_THEME="$1"
else
	1>&2 echo "Invalid useage" && exit
fi

# use gruvbox-dark-hard if theme is invalid
echo "${THEMES}" | grep "^$CHOOSEN_THEME$" -q || CHOOSEN_THEME="gruvbox-dark-hard"

# write theme to cache file
echo "$CHOOSEN_THEME" > "$CACHE_FILE"

# location of color scheme
THEME_LOC=$(find "$XDG_DATA_HOME/flavours/base16/schemes" -type f | grep "/${CHOOSEN_THEME}\.ya\?ml")

# locations of templates
XRESOURCES_T="${MY_SCRIPT_ASSETS}/xresources.mustache"
NEOVIM_T="$XDG_DATA_HOME/flavours/base16/templates/vim/templates/default.mustache" 
GTK2_T="$XDG_DATA_HOME/flavours/base16/templates/gtk-flatcolor/templates/gtk-2.mustache"
GTK3_T="$XDG_DATA_HOME/flavours/base16/templates/gtk-flatcolor/templates/gtk-3.mustache"

# generate themes and merge and write at appropriate locations
flavours build "$THEME_LOC" "$XRESOURCES_T" | xrdb -merge
mkdir "$XDG_CONFIG_HOME/nvim/colors" ; flavours build "$THEME_LOC" "$NEOVIM_T" > "$XDG_CONFIG_HOME/nvim/colors/base16.vim"
flavours build "$THEME_LOC" "$GTK2_T" > "$XDG_DATA_HOME/themes/FlatColor/colors2"
flavours build "$THEME_LOC" "$GTK3_T" > "$XDG_DATA_HOME/themes/FlatColor/colors3"

# send USR1 signal to all running st instances
# shellcheck disable=SC2046
kill -s USR1 $(pidof st)

# restart dwm using this hack
xdotool key "Super+F12"

# restart dunst, this script internally handles colors from xresources
restart-dunst

# refresh colors for active neovim instances
nvimcmd ":lua RefreshColors()"

# refresh gtk theme
killall xsettingsd ; xsettingsd &

# send notification only if command started with dmenu and NOT command-line args
[ -z "$*" ] && notify-send "Theme set to ${CHOOSEN_THEME}"
